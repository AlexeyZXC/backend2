go run main.go results:

wrk.lua file:
    math.randomseed(os.time())
    request = function()
    local k = math.random(0, 10)
    local url = "/rate?rate="..k
    return wrk.format("POST", url)
    end

cmd to run wrk:    
    wrk -c5 -t5 -d1m -s ./wrk.lua 'http://127.0.0.1:8080'

results    
    Running 1m test @ http://127.0.0.1:8080
    5 threads and 5 connections
    Thread Stats   Avg      Stdev     Max   +/- Stdev
        Latency    12.33ms   30.39ms 312.78ms   90.39%
        Req/Sec     1.15k   471.13     2.76k    66.66%
    336178 requests in 1.00m, 24.05MB read
    Requests/sec:   5600.26
    Transfer/sec:    410.18KB

-----------------------------------
in docker compose:

Running 1m test @ http://127.0.0.1:8080
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   592.39us  442.52us  10.95ms   85.92%
    Req/Sec     1.82k   258.82     2.63k    68.87%
  543499 requests in 1.00m, 38.87MB read
Requests/sec:   9056.25
Transfer/sec:    663.30KB


Running 1m test @ http://127.0.0.1:8080
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   703.08us  582.25us  11.01ms   89.22%
    Req/Sec     1.57k   308.04     2.29k    71.87%
  467662 requests in 1.00m, 33.45MB read
Requests/sec:   7789.27
Transfer/sec:    570.50KB

Running 1m test @ http://127.0.0.1:8080
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   620.61us  484.79us  10.63ms   87.16%
    Req/Sec     1.76k   330.48     2.54k    69.97%
  524851 requests in 1.00m, 37.54MB read
Requests/sec:   8743.54
Transfer/sec:    640.40KB

avg(4.99); version(1.0.5); iter(524851)

Running 1m test @ http://127.0.0.1:8080
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   595.84us  461.51us  12.41ms   87.17%
    Req/Sec     1.83k   313.13     2.68k    73.33%
  545655 requests in 1.00m, 39.03MB read
Requests/sec:   9091.98
Transfer/sec:    665.92KB

avg(4.99); version(1.0.6); iter(545656)

-----------------------------------------------

kafka with 1 partitions in docker compose
handlers and processes in minikube; replica: 2

#1 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     1.61ms    1.46ms  38.05ms   89.26%
    Req/Sec   712.56    194.52     1.19k    63.53%
  212857 requests in 1.00m, 20.10MB read
Requests/sec:   3545.31
Transfer/sec:    342.74KB

#2 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     1.52ms    1.34ms  34.80ms   88.83%
    Req/Sec   742.57    168.18     1.14k    67.37%
  221857 requests in 1.00m, 20.95MB read
Requests/sec:   3695.12
Transfer/sec:    357.23KB

--------------------------------

kafka with 1 partitions in docker compose
handlers and processes in minikube; replica: 3

#1 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     1.68ms    1.53ms  47.01ms   88.79%
    Req/Sec   680.28    160.77     1.02k    67.33%
  203221 requests in 1.00m, 19.19MB read
Requests/sec:   3385.01
Transfer/sec:    327.25KB

-----------------------------------

kafka with 3 partitions in docker compose
handlers and processes in minikube; replica: 3

#1 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     2.94ms    3.76ms  66.97ms   91.97%
    Req/Sec   448.57    153.90   800.00     69.20%
  134051 requests in 1.00m, 12.66MB read
Requests/sec:   2232.36
Transfer/sec:    215.81KB

#2 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     2.36ms    2.11ms  37.57ms   86.28%
    Req/Sec   490.35    118.23     0.87k    65.47%
  146537 requests in 1.00m, 13.83MB read
Requests/sec:   2440.51
Transfer/sec:    235.94KB

-----------------------------------

kafka with 2 partitions in docker compose
handlers and processes in minikube; replica: 2

#1 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     2.07ms    2.04ms  53.72ms   89.58%
    Req/Sec   564.48    156.97     0.95k    65.43%
  168676 requests in 1.00m, 15.92MB read
Requests/sec:   2809.19
Transfer/sec:    271.58KB

#2 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     1.88ms    1.71ms  40.81ms   88.94%
    Req/Sec   608.48    139.02     1.06k    67.07%
  181810 requests in 1.00m, 17.16MB read
Requests/sec:   3028.08
Transfer/sec:    292.74KB

#3 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     1.94ms    1.74ms  36.40ms   88.21%
    Req/Sec   591.87    142.49     1.01k    67.27%
  176833 requests in 1.00m, 16.69MB read
Requests/sec:   2945.37
Transfer/sec:    284.74KB

--------------------------------------------------
kafka with 1 partitions in docker compose
handlers and processes in minikube; replica: 1

#1 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     1.44ms    1.46ms  35.36ms   90.76%
    Req/Sec   820.55    241.10     1.62k    66.93%
  245116 requests in 1.00m, 23.14MB read
Requests/sec:   4081.88
Transfer/sec:    394.61KB

#2 run
Running 1m test @ http://handlers.host
  5 threads and 5 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     1.31ms    1.25ms  36.88ms   90.50%
    Req/Sec     0.88k   216.50     1.60k    68.33%
  263397 requests in 1.00m, 24.87MB read
Requests/sec:   4387.23
Transfer/sec:    424.14KB
--------------------------------------------------------------
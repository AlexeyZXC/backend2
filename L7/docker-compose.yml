# version: "3.7"
services:
  hanlders:
    # build:
    #   dockerfile: Dockerfile
    #   context: .
    # command: "./bin/api"
    image: mypc.ru:5000/handlers:1.0.6
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_VERSION=4.0.0
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
        restart: true
    # networks:
    #   - my_network
  
  # process:
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #   command: "./bin/process"
  #   environment:
  #   - KAFKA_BROKERS=kafka:9092
  #   depends_on:
  #   - kafka
  #   # - redis

  processes:    
    image: mypc.ru:5000/processes:1.0.4
    environment:
    - KAFKA_BROKERS=kafka:9092
    - KAFKA_VERSION=4.0.0
    depends_on:
      kafka:
        condition: service_healthy
        restart: true

  kafka:
    image: apache/kafka:latest
    ports:
      - "9092:9092"
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test:
        ["CMD", "/opt/kafka/bin/kafka-topics.sh", "--version"]
      interval: 5s
      timeout: 10s
      retries: 4
      
  
